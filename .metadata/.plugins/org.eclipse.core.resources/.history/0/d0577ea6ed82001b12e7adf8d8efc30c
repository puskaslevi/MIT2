package hu.bme.mit.yakindu.analysis.workhere;

public class CodeGenerator {
	import java.io.IOException;
	import java.util.Scanner;

	import hu.bme.mit.yakindu.analysis.RuntimeService;
	import hu.bme.mit.yakindu.analysis.TimerService;
	import hu.bme.mit.yakindu.analysis.example.ExampleStatemachine;
	import hu.bme.mit.yakindu.analysis.example.IExampleStatemachine;

		
		public static void main(String[] args) throws IOException {
			ExampleStatemachine s = new ExampleStatemachine();
			s.setTimer(new TimerService());
			RuntimeService.getInstance().registerStatemachine(s, 200);
			s.init();
			s.enter();
			s.runCycle();
			
			Scanner scanner = new Scanner(System.in);
			while(true) {
				switch(scanner.nextLine()) {
					case "white": s.raiseWhite(); break;
					case "black": s.raiseBlack(); break;
					case "start": s.raiseStart(); break;
					case "exit": System.exit(0); break;
				}
				s.runCycle();
				print(s);
			}
		}

		public static void print(IExampleStatemachine s) {
			System.out.println("W = " + s.getSCInterface().getWhiteTime());
			System.out.println("B = " + s.getSCInterface().getBlackTime());
		}
	
	public static void generateCode(List<String> variables, List<String> events) {
		System.out.println("package hu.bme.mit.yakindu.analysis.workhere;");
		System.out.println("import java.io.IOException;\nimport java.util.Scanner;\nimport hu.bme.mit.yakindu.analysis.RuntimeService;");
		System.out.println("import hu.bme.mit.yakindu.analysis.TimerService;\nimport hu.bme.mit.yakindu.analysis.example.ExampleStatemachine;\nimport hu.bme.mit.yakindu.analysis.example.IExampleStatemachine;");
		System.out.println("public class RunStatechart {\n");
		System.out.println("\tpublic static void main(String[] args) throws IOException {");
		System.out.println("\t\tExampleStatemachine s = new ExampleStatemachine();\n\t\ts.setTimer(new TimerService());\n\t\tRuntimeService.getInstance().registerStatemachine(s, 200);");
		System.out.println("\t\ts.init();\n\t\ts.enter();\n\t\ts.runCycle();\n")
	}
	
}
